global:
  fqdnSuffix: .svc.cluster.local

replicaCount: 1

ingress:
  host: localhost
  path: /dummy-service

image:
  repository: ghcr.io/vladimir22/dummy-service
  tag: latest
  pullPolicy: Always
db:
  ## DbInstance settings (db admin)
  host: "postgres-db-pg-cluster.pf.svc.cluster.local"
  port: "5432"  
  adminUsername: "postgres"
  adminPassword: "postgres"
  ## Database settings (db user)
  name: "testdb"
  username: "testdb_user"
  password: "testdb_password"
  jdbcUrl: "jdbc:postgresql://{{ .Values.db.host }}:{{ .Values.db.port }}/{{ .Values.db.name }}"

infinispan:
  username: "appuser"
  password: "appuser123"

keystore:
  password: my-keystore-password

controller:
  echoserver:
    url: /dummy-service/echo
  httpclient:
    url: /dummy-service/http
  hotrod:
    url: /dummy-service/hotrod
    cache:
      name: gatewaySessions
  db:
    url: /dummy-service/db


imagePullSecrets: []
nameOverride: ""
fullnameOverride: "dummy-service"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  #capabilities:
  #  drop:
  #  - ALL
  #readOnlyRootFilesystem: true
  #runAsNonRoot: true
  #runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8282

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}



