server:
  port: 8282

logging:
  level:
    root: info
    com.ge.digital.hotrodproxy: debug
    org.springframework.cache: trace
    org.infinispan: error ## 'error' level disables WARN java.net.SocketTimeoutException message raised in first startup because of istio-proxy container.


## HTTP endpoints:
controller:
  echoserver:
    url: /echo
  httpclient:
    url: /run
  hotrod:
    url: /api/v1/hotrod-proxy/{key}
    cache:
      name: gatewaySessions
  db:
    url: /api/v1/db-client/{key}


## infinispan hotrod remote cache settings, details: https://infinispan.org/infinispan-spring-boot/master/spring_boot_starter.html
infinispan:
  remote:
    server-list: 127.0.0.1:11222
    max-retries: 3
    ## timeout values in milliseconds
    connect-timeout: 500
    transaction-timeout: 500
    connection-pool-max-wait: 500
    ## setup serialization
    marshaller: org.infinispan.commons.marshall.JavaSerializationMarshaller
    ## allow to serialize only minimum required classes
    java-serial-whitelist: 'org.infinispan.spring.common.provider.NullValue,java.util.LinkedList'


spring:
  autoconfigure:
    exclude: "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration"
  jackson:
    default-property-inclusion: NON_NULL
  datasource:
    #    url: jdbc:postgresql://<<PG_HOST>>/smdb?sslmode=require
    url: jdbc:postgresql://localhost:5432/smdb
    username: smdbuser
    password: smdbuser123
    driver-class-name: org.postgresql.Driver

## Hibernate properties for Postgresql
spring.jpa.database-platform: org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql: false
spring.jpa.hibernate.ddl-auto: update
spring.jpa.hibernate.naming.implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql: true
#https://github.com/spring-projects/spring-boot/issues/12007#issuecomment-369388646
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation: true


## Actuator common configuration
management.endpoints.enabled-by-default: false
management.endpoints.web.exposure.include: prometheus, health, caches, info
## Actuator Metrics configuration, is used to collect metrics, URL: http://sws-login-app-server/actuator/prometheus
management.endpoint.metrics.enabled: true
management.endpoint.prometheus.enabled: true
management.metrics.export.prometheus.enabled: true
## Actuator Health configuration, is used to readiness probe, URL: http://sws-login-app-server/actuator/health
management.endpoint.health.enabled: true
management.endpoint.health.show-details: never
management.health.defaults.enabled: false
## Actuator Cache configuration, is used to check cache state, URL: http://sws-login-app-server/actuator/caches
management.endpoint.caches.enabled: true
## Actuator Info configuration, is used to liveness probe, URL: http://sws-login-app-server/actuator/info
management.endpoint.info.enabled: true
management.info.defaults.enabled: false
management.health.db.enabled: false

